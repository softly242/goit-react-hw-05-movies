{"version":3,"file":"static/js/663.8a005d00.chunk.js","mappings":"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","sources":["API.js","pages/MovieDetails/MovieDetails.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a55c18ac154a966c26e6806cf2228fab';\n\nexport const getMovieTrending = () => {\n  return fetch(\n    `${URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error('Нет фильмов с таким названием'));\n  });\n};\n\nexport const getMovieSearch = (query, page) => {\n  return fetch(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=${page}`\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error('Нет фильмов с таким названием'));\n  });\n};\n\nexport const getMovieId = id => {\n  return fetch(`${URL}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Нет фильмов с таким названием'));\n    }\n  );\n};\n\nexport const getMovieCast = id => {\n  return fetch(`${URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Нет фильмов с таким названием'));\n    }\n  );\n};\n\nexport const getMovieReviews = id => {\n  \n  return fetch(`${URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Нет фильмов с таким названием'));\n    }\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  color: black;\n  font-size: 20px;\n  font-weight: 600;\n  justify-content: space-around;\n  padding: 15px;\n`;\nexport const Link = styled(NavLink)`\n\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const NavContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n \n\n  > nav {\n    display: flex;\n  }\n`;\n\n","import { Container } from \"pages/MovieDetails/MovieDetails.styled\";\n\nexport default function MovieCard({ data }) {\n  return (\n    <Container>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${data.poster_path}`}\n          alt={data.original_name}\n          loading=\"lazy\"\n        />\n        <div>\n          <h1>{data.title}</h1>\n          <p>\n            Popularity <span>{data.popularity}</span>\n          </p>\n\n          <p>Overview</p>\n          <p>{data.overview}</p>\n          <p>Genres</p>\n          <p>\n            {data.genres.map(({ name }, index) => (\n              <span key={name}>{name}</span>\n            ))}\n          </p>\n        </div>\n      </Container>\n  )\n}","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovieId } from 'API';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Text } from '@mantine/core';\nimport { Link, NavContainer } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  console.log(location);\n\n  useEffect(() => {\n    getMovieId(movieId)\n      .then(data => {\n        console.log(data);\n        setData(data);\n      })\n      .catch(e => {\n        setError(e.message);\n      });\n  }, [movieId, setData]);\n\n  if (!data && !error) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return (\n      <Text weight={600} size={32} color=\"red\">\n        Error: {error}\n      </Text>\n    );\n  }\n\n  return (\n    <>\n      <Link to={backLink.current}>Go back</Link>\n      <MovieCard data={data} />\n      <NavContainer>\n        <nav>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </nav>\n      </NavContainer>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["URL","API_KEY","getMovieTrending","fetch","concat","then","res","ok","json","Promise","reject","Error","getMovieSearch","query","page","getMovieId","id","getMovieCast","getMovieReviews","Container","styled","_templateObject","_taggedTemplateLiteral","Link","NavLink","_templateObject2","NavContainer","_templateObject3","MovieCard","_ref","data","_jsxs","children","_jsx","src","poster_path","alt","original_name","loading","title","popularity","overview","genres","map","_ref2","index","name","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","error","setError","movieId","useParams","location","useLocation","backLink","useRef","state","from","console","log","useEffect","catch","e","message","Text","weight","size","color","_Fragment","to","current","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}