{"version":3,"file":"static/js/266.7bfb6744.chunk.js","mappings":"sQAAA,IAAMA,EAAM,gCACNC,EAAU,mCAEHC,EAAmB,WAC9B,OAAOC,MAAM,GAADC,OACPJ,EAAG,+BAAAI,OAA8BH,EAAO,oBAC3CI,MAAK,SAAAC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,8JAClC,GACF,EAEaC,EAAiB,SAACC,EAAOC,GACpC,OAAOX,MAAM,GAADC,OACPJ,EAAG,yBAAAI,OAAwBH,EAAO,WAAAG,OAAUS,EAAK,6CAAAT,OAA4CU,IAChGT,MAAK,SAAAC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,8JAClC,GACF,EAEaI,EAAa,SAAAC,GACxB,OAAOb,MAAM,GAADC,OAAIJ,EAAG,UAAAI,OAASY,EAAE,aAAAZ,OAAYH,EAAO,oBAAmBI,MAClE,SAAAC,GACE,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,8JAClC,GAEJ,EAEaM,EAAe,SAAAD,GAC1B,OAAOb,MAAM,GAADC,OAAIJ,EAAG,UAAAI,OAASY,EAAE,qBAAAZ,OAAoBH,EAAO,oBAAmBI,MAC1E,SAAAC,GACE,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,8JAClC,GAEJ,EAEaO,EAAkB,SAAAF,GAE7B,OAAOb,MAAM,GAADC,OAAIJ,EAAG,UAAAI,OAASY,EAAE,qBAAAZ,OAAoBH,EAAO,2BAA0BI,MACjF,SAAAC,GACE,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,8JAClC,GAEJ,C,8ECrDe,SAASQ,EAAOC,GAAgC,IAA7BC,EAAUD,EAAVC,WAAYC,EAAQF,EAARE,SAAUC,EAAEH,EAAFG,GAEtD,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACIJ,EAAWK,KAAI,SAAAC,EAAgBC,GAAW,IAAxBZ,EAAEW,EAAFX,GAAIa,EAAKF,EAALE,MACtB,OACEL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAEHP,GAAE,GAAAnB,OAAKmB,GAAEnB,OAAGY,GACZe,MAAO,CAAEC,KAAMV,GAAWG,SAEzBI,KANIb,EAAKY,EAUlB,KAGN,C,4IClBe,SAASK,IAExB,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCb,EAAUe,EAAA,GAAEE,EAAaF,EAAA,GAC9BG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,YAERzC,EAAAA,EAAAA,MACGG,MAAK,SAAAe,GAAgB,IAAdwB,EAAOxB,EAAPwB,QAENN,GAAc,SAAAO,GAAI,SAAAzC,QAAA0C,EAAAA,EAAAA,GAAQD,IAAIC,EAAAA,EAAAA,GAAKF,GAAO,GAE5C,IACCG,OAAM,SAAAC,GACLN,EAASM,EAAEC,QACb,GACJ,GAAG,CAACX,IAEAG,GACKS,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,OAAQ,IAAKC,KAAM,GAAIC,MAAM,MAAK7B,SAAA,CAAC,UAASgB,MAIzDS,EAAAA,EAAAA,MAAA,QAAAzB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACHJ,IACCG,EAAAA,EAAAA,KAACL,EAAAA,EAAO,CAACE,WAAYA,EAAYE,GAAI,eAK7C,C","sources":["API.js","components/Gallery/Gallery.js","pages/Home.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a55c18ac154a966c26e6806cf2228fab';\n\nexport const getMovieTrending = () => {\n  return fetch(\n    `${URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error('Нет фильмов с таким названием'));\n  });\n};\n\nexport const getMovieSearch = (query, page) => {\n  return fetch(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=${page}`\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error('Нет фильмов с таким названием'));\n  });\n};\n\nexport const getMovieId = id => {\n  return fetch(`${URL}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Нет фильмов с таким названием'));\n    }\n  );\n};\n\nexport const getMovieCast = id => {\n  return fetch(`${URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Нет фильмов с таким названием'));\n    }\n  );\n};\n\nexport const getMovieReviews = id => {\n  \n  return fetch(`${URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Нет фильмов с таким названием'));\n    }\n  );\n};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Gallery({ filmTrends, location, to }) {\n\n  return (\n    <ul >\n      { filmTrends.map(({ id, title }, index) => {\n        return (\n          <li key={id + index}>\n            <Link\n              \n              to={`${to}${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nGallery.propTypes = {\n  filmTrends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n  location: PropTypes.object,\n  to: PropTypes.string,\n};","import { useEffect, useState } from 'react';\nimport { getMovieTrending } from \"API\";\nimport { Text } from '@mantine/core';\nimport Gallery from 'components/Gallery/Gallery';\n\nexport default function Home() {\n\nconst [filmTrends, setFilmTrends] = useState([]);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    \n    getMovieTrending()\n      .then(({results}) => {\n       \n        setFilmTrends(prev => [...prev, ...results]);\n        \n      })\n      .catch(e => {\n        setError(e.message);\n      });\n  }, [setFilmTrends]);\n\n  if (error) {\n    return <Text weight={600} size={32} color='red'>Error: { error }</Text>\n  }\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {filmTrends && (\n        <Gallery filmTrends={filmTrends} to={'/movies/'} />\n      )}\n    </main>\n    \n  );\n}"],"names":["URL","API_KEY","getMovieTrending","fetch","concat","then","res","ok","json","Promise","reject","Error","getMovieSearch","query","page","getMovieId","id","getMovieCast","getMovieReviews","Gallery","_ref","filmTrends","location","to","_jsx","children","map","_ref2","index","title","Link","state","from","Home","_useState","useState","_useState2","_slicedToArray","setFilmTrends","_useState3","_useState4","error","setError","useEffect","results","prev","_toConsumableArray","catch","e","message","_jsxs","Text","weight","size","color"],"sourceRoot":""}